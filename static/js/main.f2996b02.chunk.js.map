{"version":3,"sources":["component_2/form.js","component_2/todo.js","component_2/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","text","input","setInput","change","e","target","value","console","log","Submit","submit","id","Math","floor","random","Update","edit","className","type","placeholder","onChange","onClick","Todo","todo","remove","update","Complete","setEdit","changeComplete","item","map","index","isComplete","bind","Todolist","todos","setTodos","NewTodo","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2996b02.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nfunction Form(props) {\r\n    const [input,setInput]=useState(props.text);\r\n    const change=(e)=>{\r\n        setInput(e.target.value);\r\n        console.log(e.target.value);\r\n    }\r\n    const Submit=()=>{\r\n        props.submit({\r\n            id:Math.floor(Math.random()*10),\r\n            text:input\r\n        })\r\n        console.log(input);\r\n        setInput('');\r\n    }\r\n    const Update=()=>{\r\n        props.submit({\r\n            id:props.edit,\r\n            text:input\r\n        })\r\n        setInput('');\r\n    }\r\n    if(props.edit==null)\r\n        return (\r\n            <div className={props.className}>\r\n                    <input type=\"text\" placeholder={(input!=='')?input:\"Add a Todo\"} value={input} className=\"Todo_form\" onChange={change}/>\r\n                    <button className=\"Todo_btn\" onClick={(props.edit)?Update:Submit}>Add</button>\r\n            </div>\r\n        )\r\n    else\r\n    {\r\n        return (\r\n            <div className={props.className}>\r\n                    <input type=\"text\" placeholder={(input!=='')?input:\"Update\"} value={input}  className=\"Todo_form\" onChange={change}/>\r\n                    <button className=\"Todo_btn btn_update\" onClick={(props.edit)?Update:Submit}>Update</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import React, {useState} from 'react'\r\nimport Form from './form'\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nfunction Todo({todo, remove, update, Complete}) {\r\n    const [edit, setEdit]=useState({\r\n        id:null,\r\n        text:''\r\n    });\r\n    const changeComplete=(id)=>{\r\n        Complete(id);\r\n    }\r\n    const changeUpdate=(item)=>\r\n    {\r\n        update(item.id, item.text);\r\n        setEdit({\r\n            id:null,\r\n            text:''\r\n        })\r\n    }\r\n    if(edit.id!=null)\r\n    {\r\n        return <Form  className=\"Todo-update\" submit={changeUpdate} edit={edit.id} text={edit.text}/>\r\n    }\r\n    return todo.map((item, index)=>{\r\n        return (\r\n            <div key={index}  className={item.isComplete?\"Todo_item complete\":\"Todo_item uncomplete\"} >\r\n                <h2 className=\"Todo_item_content\"  onClick={changeComplete.bind(this, item.id)}>{item.text}</h2>\r\n                <div className='icons'>\r\n                    <RiCloseCircleLine\r\n                    onClick={() => remove(item.id)}\r\n                    className='delete-icon'\r\n                    />\r\n                    <TiEdit\r\n                    onClick={() => setEdit({ id: item.id, text: item.text })}\r\n                    className='edit-icon'\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nexport default Todo\r\n","import React , {useState}from 'react'\r\nimport Todo from './todo'\r\nimport Form from './form'\r\nfunction Todolist() {\r\n    const [todos, setTodos]=useState([]);\r\n    // add\r\n    const add=(todo)=>{\r\n        const NewTodo=[todo, ...todos];\r\n        setTodos(NewTodo);\r\n    }\r\n    // Delete\r\n    const Remove=(id)=>{\r\n        const NewTodo=[...todos].filter((item, index)=>{\r\n            return item.id!=id;\r\n        })\r\n        setTodos(NewTodo);\r\n    }\r\n    // update\r\n    const Update=(id, value)=>{\r\n        let NewTodo=[...todos].map((item, index)=>{\r\n            if(item.id===id)\r\n            {\r\n                item.text=value;\r\n            }\r\n            return item;\r\n        })\r\n        console.log(NewTodo);\r\n        setTodos(NewTodo);\r\n    }\r\n    // Complete\r\n    const Complete=(id)=>{\r\n        let NewTodo=[...todos].map((item, index)=>{\r\n            if(item.id===id)\r\n            {\r\n                item.isComplete=!item.isComplete;\r\n            }\r\n            return item;\r\n        })\r\n        setTodos(NewTodo);\r\n    }\r\n    return (\r\n        <div className=\"Todo-list\">\r\n            <div className=\"Constain\">\r\n                <h1 className=\"Title\">What's the plan of you Today</h1>\r\n                <Form submit={add} className=\"Control\"/>\r\n                <Todo todo={todos} remove={Remove} update={Update}  Complete={Complete}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist\r\n","import './App.css';\n// import Todolist from './component/Todolist'\nimport Todolist from './component_2/Todolist'\nfunction App() {\n  return (\n    <div className=\"Todoapp\">\n      <Todolist/>\n      {/* <Todolist/> */}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}